<Project Sdk="Microsoft.NET.Sdk.Worker">

	<!-- Set defines: Windows, Linux, macOS and/or Arm64. This is needed in some files! -->
	<Import Project="../../../SDK/NET/Common.targets" />

	<!-- Common properties -->
	<PropertyGroup>
		<Name>DotNet Long Process</Name>
		<RootNamespace>CodeProject.AI.Modules.DotNetLongProcess</RootNamespace>
		<AssemblyName>DotNetLongProcess</AssemblyName>
		<Version>1.0</Version>
		<Nullable>enable</Nullable>
		<ImplicitUsings>disable</ImplicitUsings>
		<ApplicationIcon>favicon.ico</ApplicationIcon>
		<Authors>CodeProject</Authors>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<GeneratePackageOnBuild>False</GeneratePackageOnBuild>
		<BaseOutputPath></BaseOutputPath>
		<TargetFramework>net7.0</TargetFramework>
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
	</PropertyGroup>

	<!-- Common Release properties -->
	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<SelfContained>false</SelfContained>
		<DebugType>none</DebugType>
		<DebugSymbols>false</DebugSymbols>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<WarningsAsErrors />
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>

	<!-- Common Debug properties -->
	<PropertyGroup Condition="'$(Configuration)'=='Debug'">
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<WarningsAsErrors />
		<NoWarn>1701;1702;</NoWarn>
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>
	
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
	  <DefineConstants>$(DefineConstants);</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
	  <DefineConstants>$(DefineConstants);</DefineConstants>
	</PropertyGroup>

	<PropertyGroup>
		<GpuType>CPU</GpuType>
		<GpuType Condition="'$(IsWindows)'=='true'">DirectML</GpuType>						<!-- Windows -->
		<GpuType Condition="'$(IsLinux)'=='true'">GPU</GpuType>	                            <!-- Linux -->
		<GpuType Condition="'$(IsLinux)'=='true' And '$(IsArm64)'=='true'">CPU</GpuType>	<!-- Raspberry Pi, Orange Pi, Radxa ROCK, Jetson -->
		<GpuType Condition="'$(IsOsx)'=='true' And '$(IsArm64)'!='true'">CPU</GpuType>		<!-- Mac Intel -->
		<GpuType Condition="'$(IsOsx)'=='true' And '$(IsArm64)'=='true'">MPS</GpuType>		<!-- Mac Apple Silicon -->
	</PropertyGroup>

	<PropertyGroup>
		<RestoreAdditionalProjectSources Condition="'$(GpuType)'=='OpenVINO'">./LocalNugets</RestoreAdditionalProjectSources>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="SkiaSharp" Version="2.88.6" />
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.0" />
	</ItemGroup>

	<!-- Output the settings based on what we've determined above -->
	<Target Name="SettingsCheck" AfterTargets="BeforeBuild">
		<Message Importance="High" Text="       $(Name): Building for hardware $(GpuType)" />
	</Target>

	<PropertyGroup>
		<DefineConstants Condition="'$(GpuType)'=='CPU'">CPU</DefineConstants>
		<DefineConstants Condition="'$(GpuType)'=='GPU'">GPU</DefineConstants>
		<DefineConstants Condition="'$(GpuType)'=='MPS'">GPU</DefineConstants>
		<DefineConstants Condition="'$(GpuType)'=='OpenVINO'">OpenVINO</DefineConstants>
		<DefineConstants Condition="'$(GpuType)'=='DirectML'">DirectML</DefineConstants>
	</PropertyGroup>

	<PropertyGroup>
		<PlatformTarget Condition="'$(GpuType)'=='CPU'">AnyCPU</PlatformTarget>
		<PlatformTarget Condition="'$(GpuType)'=='CUDA'">AnyCPU</PlatformTarget>
		<PlatformTarget Condition="'$(GpuType)'=='OpenVINO'">AnyCPU</PlatformTarget>
		<PlatformTarget Condition="'$(GpuType)'=='DirectML'">x64</PlatformTarget>
		<FileVersion>2.1.5</FileVersion>
	</PropertyGroup>

	<ItemGroup>
	  <Content Include="favicon.ico" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\..\..\SDK\NET\NET.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <None Update="explore.html">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

	<!--
	<Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(Configuration)'== 'Release'">
	  <Exec Command="echo building ObjectDetectionYOLOv5Net-$(GpuType)-$(Version).zip&#xD;&#xA;cd $(ProjectDir)bin\$(Configuration)&#xD;&#xA;tar -c -z -f ObjectDetectionYOLOv5Net-$(GpuType)-$(Version).zip .\net7.0&#xD;&#xA;cd $(ProjectDir)" />
	</Target>
	-->

</Project>
